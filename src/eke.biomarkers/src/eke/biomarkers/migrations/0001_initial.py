# Generated by Django 4.0.6 on 2022-08-11 20:12

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ekeknowledge', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Biomarker',
            fields=[
                ('knowledgeobject_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ekeknowledge.knowledgeobject')),
                ('qa_state', models.CharField(blank=True, help_text='Accepted, curated, under review,…', max_length=12)),
                ('hgnc_name', models.CharField(blank=True, help_text='HUGO Gene Nomenclature Committee name', max_length=50)),
                ('biomarker_type', models.CharField(blank=True, help_text='Gene, protein, epigenetic, …', max_length=20)),
                ('members', modelcluster.fields.ParentalManyToManyField(blank=True, to='ekebiomarkers.biomarker', verbose_name='Panel Members')),
                ('protocols', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='biomarkers_researched', to='ekeknowledge.protocol', verbose_name='Protocols Studying this Biomarker')),
                ('publications', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_in_print', to='ekeknowledge.publication', verbose_name='Publications About this Biomarker')),
                ('resources', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_using_resources', to='ekeknowledge.miscellaneousresource', verbose_name='Resource Useful for this Biomarker')),
                ('science_data', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_observed', to='ekeknowledge.datacollection', verbose_name='Scientific Data About this Biomarker')),
            ],
            options={
                'abstract': False,
            },
            bases=('ekeknowledge.knowledgeobject', models.Model),
        ),
        migrations.CreateModel(
            name='BiomarkerBodySystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qa_state', models.CharField(blank=True, help_text='Accepted, curated, under review,…', max_length=12)),
                ('phase', models.PositiveIntegerField(blank=True, help_text='Current Phase (1…5)', null=True)),
                ('title', models.CharField(help_text='Organ Name', max_length=30)),
                ('description', models.TextField(blank=True, help_text='A short summary')),
                ('performance_comment', models.TextField(blank=True, help_text='How well this biomarker is doing')),
                ('biomarker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biomarker_body_systems', to='ekebiomarkers.biomarker')),
                ('publications', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_in_print', to='ekeknowledge.publication', verbose_name='Publications About this Biomarker')),
                ('resources', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_using_resources', to='ekeknowledge.miscellaneousresource', verbose_name='Resource Useful for this Biomarker')),
                ('science_data', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_observed', to='ekeknowledge.datacollection', verbose_name='Scientific Data About this Biomarker')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BiomarkerIndex',
            fields=[
                ('knowledgefolder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ekeknowledge.knowledgefolder')),
            ],
            bases=('ekeknowledge.knowledgefolder',),
        ),
        migrations.CreateModel(
            name='BodySystemStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phase', models.PositiveIntegerField(blank=True, help_text='Current Phase (1…5)', null=True)),
                ('title', models.CharField(help_text='Protocol Title', max_length=250)),
                ('decision_rule', models.CharField(blank=True, max_length=80, verbose_name='Decision rule is …')),
                ('bbs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='body_system_studies', to='ekebiomarkers.biomarkerbodysystem')),
                ('protocol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organs_on_biomarkers', to='ekeknowledge.protocol', verbose_name='The Main Protocol Researching this Organ on this Biomarker')),
                ('publications', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_in_print', to='ekeknowledge.publication', verbose_name='Publications About this Biomarker')),
                ('resources', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_using_resources', to='ekeknowledge.miscellaneousresource', verbose_name='Resource Useful for this Biomarker')),
                ('science_data', modelcluster.fields.ParentalManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_observed', to='ekeknowledge.datacollection', verbose_name='Scientific Data About this Biomarker')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BiomarkerCollaborativeGroupName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('value', models.CharField(default='Group', help_text='Collaborative group', max_length=80)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='biomarker_collaborative_group_names', to='ekebiomarkers.biomarker')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BiomarkerBodySystemCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.URLField(default='https://some/cert', help_text='Certification URL')),
                ('bbs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='biomarker_bodysystem_certifications', to='ekebiomarkers.biomarkerbodysystem')),
            ],
        ),
        migrations.CreateModel(
            name='BiomarkerAlias',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('value', models.CharField(default='Alias', help_text='Alternative name', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='biomarker_aliases', to='ekebiomarkers.biomarker')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BiomarkerAccessGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('value', models.CharField(default='Group Name', help_text='Name (only) of group (not a full DN)', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='biomarker_access_groups', to='ekebiomarkers.biomarker')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
    ]
